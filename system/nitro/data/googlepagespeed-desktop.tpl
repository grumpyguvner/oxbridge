{
 "kind": "pagespeedonline#result",
 "id": "https://test.oxbridgehomelearning.uk/",
 "responseCode": 503,
 "title": "Maintenance",
 "score": 95,
 "pageStats": {
  "numberResources": 57,
  "numberHosts": 14,
  "totalRequestBytes": "6457",
  "numberStaticResources": 46,
  "textResponseBytes": "44733",
  "cssResponseBytes": "281524",
  "imageResponseBytes": "15917",
  "javascriptResponseBytes": "839120",
  "otherResponseBytes": "132906",
  "numberJsResources": 27,
  "numberCssResources": 13
 },
 "formattedResults": {
  "locale": "en_US",
  "ruleResults": {
   "AvoidLandingPageRedirects": {
    "localizedRuleName": "Avoid landing page redirects",
    "ruleImpact": 0.0,
    "urlBlocks": [
     {
      "header": {
       "format": "Your page has no redirects. Learn more about avoiding landing page redirects.",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/AvoidRedirects"
        }
       ]
      }
     }
    ]
   },
   "EnableGzipCompression": {
    "localizedRuleName": "Enable compression",
    "ruleImpact": 0.1044,
    "urlBlocks": [
     {
      "header": {
       "format": "Compressing resources with gzip or deflate can reduce the number of bytes sent over the network."
      }
     },
     {
      "header": {
       "format": "Enable compression for the following resources to reduce their transfer size by $2 ($3 reduction).",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/EnableCompression"
        },
        {
         "type": "BYTES",
         "value": "1KiB"
        },
        {
         "type": "PERCENTAGE",
         "value": "49%"
        }
       ]
      },
      "urls": [
       {
        "result": {
         "format": "Compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "https://chat.freshdesk.com/teamstatus?callback=jsonpCallback&siteid=77a64878699e071e38138664f6757f00&vid=visitor121008374103&c=fd&widget_id=09fda25a-6854-49a4-a639-0558e7612ad0&_=1462198347912"
          },
          {
           "type": "BYTES",
           "value": "1KiB"
          },
          {
           "type": "PERCENTAGE",
           "value": "49%"
          }
         ]
        }
       }
      ]
     }
    ]
   },
   "LeverageBrowserCaching": {
    "localizedRuleName": "Leverage browser caching",
    "ruleImpact": 1.9872883597883597,
    "urlBlocks": [
     {
      "header": {
       "format": "Setting an expiry date or a maximum age in the HTTP headers for static resources instructs the browser to load previously downloaded resources from local disk rather than over the network."
      }
     },
     {
      "header": {
       "format": "Leverage browser caching for the following cacheable resources:",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/LeverageBrowserCaching"
        }
       ]
      },
      "urls": [
       {
        "result": {
         "format": "$1 ($2)",
         "args": [
          {
           "type": "URL",
           "value": "https://www.googletagmanager.com/gtm.js?id=GTM-MP6TDJ"
          },
          {
           "type": "DURATION",
           "value": "16.3 minutes"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 ($2)",
         "args": [
          {
           "type": "URL",
           "value": "https://www.google-analytics.com/plugins/ua/ec.js"
          },
          {
           "type": "DURATION",
           "value": "60 minutes"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 ($2)",
         "args": [
          {
           "type": "URL",
           "value": "https://www.google.com/jsapi?callback=gloader_ready"
          },
          {
           "type": "DURATION",
           "value": "60 minutes"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1 ($2)",
         "args": [
          {
           "type": "URL",
           "value": "https://www.google-analytics.com/analytics.js"
          },
          {
           "type": "DURATION",
           "value": "2 hours"
          }
         ]
        }
       }
      ]
     }
    ]
   },
   "MainResourceServerResponseTime": {
    "localizedRuleName": "Reduce server response time",
    "ruleImpact": 0.0,
    "urlBlocks": [
     {
      "header": {
       "format": "Your server responded quickly. Learn more about server response time optimization.",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/Server"
        }
       ]
      }
     }
    ]
   },
   "MinifyCss": {
    "localizedRuleName": "Minify CSS",
    "ruleImpact": 0.0,
    "urlBlocks": [
     {
      "header": {
       "format": "Your CSS is minified. Learn more about minifying CSS.",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/MinifyResources"
        }
       ]
      }
     }
    ]
   },
   "MinifyHTML": {
    "localizedRuleName": "Minify HTML",
    "ruleImpact": 0.0,
    "urlBlocks": [
     {
      "header": {
       "format": "Your HTML is minified. Learn more about minifying HTML.",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/MinifyResources"
        }
       ]
      }
     }
    ]
   },
   "MinifyJavaScript": {
    "localizedRuleName": "Minify JavaScript",
    "ruleImpact": 0.0,
    "urlBlocks": [
     {
      "header": {
       "format": "Your JavaScript content is minified. Learn more about minifying JavaScript.",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/MinifyResources"
        }
       ]
      }
     }
    ]
   },
   "MinimizeRenderBlockingResources": {
    "localizedRuleName": "Eliminate render-blocking JavaScript and CSS in above-the-fold content",
    "ruleImpact": 2.0,
    "urlBlocks": [
     {
      "header": {
       "format": "Your page has $1 blocking script resources and $2 blocking CSS resources. This causes a delay in rendering your page.",
       "args": [
        {
         "type": "INT_LITERAL",
         "value": "8"
        },
        {
         "type": "INT_LITERAL",
         "value": "11"
        }
       ]
      }
     },
     {
      "header": {
       "format": "None of the above-the-fold content on your page could be rendered without waiting for the following resources to load. Try to defer or asynchronously load blocking resources, or inline the critical portions of those resources directly in the HTML."
      }
     },
     {
      "header": {
       "format": "Remove render-blocking JavaScript:",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/BlockingJS"
        }
       ]
      },
      "urls": [
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://test.oxbridgehomelearning.uk/catalog/view/javascript/jquery/jquery-2.1.1.min.js"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://test.oxbridgehomelearning.uk/catalog/view/javascript/bootstrap/js/bootstrap.min.js"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://test.oxbridgehomelearning.uk/catalog/view/theme/theme532/js/common.min.js"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://test.oxbridgehomelearning.uk/catalog/view/theme/theme532/js/device.min.js"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://test.oxbridgehomelearning.uk/catalog/view/theme/theme532/js/jquery-scrolltofixed.min.js"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://test.oxbridgehomelearning.uk/catalog/view/theme/theme532/js/livesearch.min.js"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://test.oxbridgehomelearning.uk/catalog/view/theme/theme532/js/script.min.js"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://test.oxbridgehomelearning.uk/catalog/view/theme/theme532/js/jquery.easing.1.3.min.js"
          }
         ]
        }
       }
      ]
     },
     {
      "header": {
       "format": "Optimize CSS Delivery of the following:",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/OptimizeCSSDelivery"
        }
       ]
      },
      "urls": [
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://test.oxbridgehomelearning.uk/catalog/view/javascript/bootstrap/css/bootstrap.min.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://fonts.googleapis.com/css?family=Roboto:400,300,500,700"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://test.oxbridgehomelearning.uk/catalog/view/theme/theme532/js/fancybox/jquery.fancybox.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://test.oxbridgehomelearning.uk/catalog/view/theme/theme532/stylesheet/owl-carousel.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://test.oxbridgehomelearning.uk/catalog/view/theme/theme532/stylesheet/photoswipe.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://test.oxbridgehomelearning.uk/catalog/view/theme/theme532/stylesheet/font-awesome.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://test.oxbridgehomelearning.uk/catalog/view/theme/theme532/js/jquery.bxslider/jquery.bxslider.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://test.oxbridgehomelearning.uk/catalog/view/theme/theme532/stylesheet/stylesheet.min.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://fonts.googleapis.com/css?family=Roboto+Condensed:400,300&subset=latin,cyrillic"
          }
         ]
        }
       },
       {
        "result": {
         "format": "$1",
         "args": [
          {
           "type": "URL",
           "value": "https://test.oxbridgehomelearning.uk/catalog/view/theme/theme532/stylesheet/stylesheet-mods.css"
          }
         ]
        }
       }
      ]
     }
    ]
   },
   "OptimizeImages": {
    "localizedRuleName": "Optimize images",
    "ruleImpact": 0.0925,
    "urlBlocks": [
     {
      "header": {
       "format": "Properly formatting and compressing images can save many bytes of data."
      }
     },
     {
      "header": {
       "format": "Optimize the following images to reduce their size by $2 ($3 reduction).",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/OptimizeImages"
        },
        {
         "type": "BYTES",
         "value": "925B"
        },
        {
         "type": "PERCENTAGE",
         "value": "75%"
        }
       ]
      },
      "urls": [
       {
        "result": {
         "format": "Losslessly compressing $1 could save $2 ($3 reduction).",
         "args": [
          {
           "type": "URL",
           "value": "https://d36mpcpuzc4ztk.cloudfront.net/images/chat-icon.png"
          },
          {
           "type": "BYTES",
           "value": "925B"
          },
          {
           "type": "PERCENTAGE",
           "value": "75%"
          }
         ]
        }
       }
      ]
     }
    ]
   },
   "PrioritizeVisibleContent": {
    "localizedRuleName": "Prioritize visible content",
    "ruleImpact": 0.0,
    "urlBlocks": [
     {
      "header": {
       "format": "You have the above-the-fold content properly prioritized. Learn more about prioritizing visible content.",
       "args": [
        {
         "type": "HYPERLINK",
         "value": "https://developers.google.com/speed/docs/insights/PrioritizeVisibleContent"
        }
       ]
      }
     }
    ]
   }
  }
 },
 "version": {
  "major": 1,
  "minor": 15
 }
}
